!function(){!async function(){try{const t=`http://localhost:3000/api/tasks?id=${s()}`,n=await fetch(t),a=await n.json();e=a.tasks,o()}catch(e){console.log(e)}}();let e=[],t=[];function n(n){const a=n.target.value;t=""!==a?e.filter((e=>e.state===a)):[],o()}function o(){!function(){const e=document.querySelector(".tasks-list");for(;e.firstChild;)e.firstChild.remove()}(),function(){const n=document.querySelector('input[name="filter"]:checked').value;n&&(t=e.filter((e=>e.state===n)),0==t.length&&(radiobtn=document.querySelector("#all"),radiobtn.checked=!0))}(),function(){const t=e.filter((e=>"0"===e.state)),n=document.querySelector("#pending");0===t.length?n.disabled=!0:n.disabled=!1}(),function(){const t=e.filter((e=>"1"===e.state)),n=document.querySelector("#completed");0===t.length?n.disabled=!0:n.disabled=!1}();const n=t.length?t:e,c=document.querySelector("#tasks-list");if(0==n.length){const e=document.createElement("LI");return e.textContent="There are not Tasks to Show",e.classList.add("no-tasks"),void c.appendChild(e)}const d={0:"Pending",1:"Completed"};n.forEach((t=>{const n=document.createElement("LI");n.dataset.taskId=t.id,n.classList.add("task");const l=document.createElement("P");l.textContent=t.name,l.ondblclick=function(){a(!0,{...t})};const i=document.createElement("DIV");i.classList.add("options");const r=document.createElement("BUTTON");r.classList.add("task-state"),r.textContent=d[t.state],r.classList.add(`${d[t.state].toLowerCase()}`),r.dataset.taskState=t.state,r.ondblclick=function(){!function(t){"0"==t.state?t.state="1":t.state="0",async function(t){const{id:n,name:a,state:c}=t,d=s(),l=new FormData;l.append("id",n),l.append("name",a),l.append("state",c),l.append("projectId",d);try{const t="http://localhost:3000/api/update",a=await fetch(t,{method:"POST",body:l});"exito"===(await a.json()).answer.tipo&&(e=e.map((e=>(e.id==n&&(e.state=c),e))),o())}catch(e){console.log(e)}}(t)}({...t})};const u=document.createElement("BUTTON");u.classList.add("delete-task"),u.textContent="Delete",u.dataset.idTask=t.id,u.ondblclick=function(){!function(t){Swal.fire({title:"Are you sure?",text:"You won't be able to revert this!",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Yes, delete it!"}).then((n=>{n.isConfirmed&&async function(t){const{id:n,name:a}=t;t.projectId=s();const c=new FormData;c.append("id",n),c.append("name",a),c.append("projectId",t.projectId);try{const t="http://localhost:3000/api/delete",a=await fetch(t,{method:"POST",body:c}),s=await a.json();s.result&&(Swal.fire("Removed",s.result.mensaje,"success"),e=e.filter((e=>e.id!==n)),o())}catch(e){console.log(e)}}(t)}))}({...t})},i.appendChild(r),i.appendChild(u),n.appendChild(l),n.appendChild(i),c.appendChild(n)}))}document.querySelectorAll('#filters input[type="radio"]').forEach((e=>{e.addEventListener("input",n)}));function a(t=!1,n=null){const a=document.createElement("DIV");a.classList.add("modal"),document.body.classList.add("no-overflow"),a.innerHTML=`\n            <form class="formulario new-task">\n                <legend>${!0===t?"Edit Task":"Add a new Task"}</legend>\n\n                <div class="campo campo-modal">\n                    <label>Task</label>\n                    <input\n                        type="text"\n                        name="task"\n                        placeholder="${null!==n?"Edit the task":"Add Task to the current Project"}"\n                        id="task"\n                        value="${null!==n?n.name:""}"\n                    >\n                </div>\n                <div class="options">\n                    <input \n                        type="submit" \n                        class="submit-new-task" \n                        value="${null!==n?"Update Task":"Add new Task"}"\n                    >\n                    <button type="button" class="close-modal">Cancel</button>\n                </div> \n        `,setTimeout((()=>{document.querySelector(".formulario").classList.add("animate")}),0),a.addEventListener("click",(l=>{if(l.preventDefault(),l.target.classList.contains("close-modal")||l.target.classList.contains("modal")){document.querySelector(".formulario").classList.add("cerrar"),setTimeout((()=>{a.remove(),document.body.classList.remove("no-overflow")}),500)}if(l.target.classList.contains("submit-new-task")){const a=document.querySelector("#task").value.trim();if(""===a){const e=document.querySelector(".formulario legend");campo=document.querySelector("#task"),c("error","Add a name for the Task",e,campo),e.nextElementSibling}else t?(n.name=a,async function(t){const{id:n,name:a,projectId:l,state:i}=t,r=new FormData;r.append("id",n),r.append("name",a),r.append("projectId",s()),r.append("state",i);try{const t="http://localhost:3000/api/update",s=await fetch(t,{method:"POST",body:r}),l=await s.json();console.log(l),c(l.answer.tipo,l.answer.mensaje,document.querySelector(".formulario legend")),"exito"==l.answer.tipo&&(d(),e=e.map((e=>(e.id===n&&(e.state=i,e.name=a),e))),o())}catch(e){console.log(e)}}(n)):async function(t){const n=new FormData;n.append("name",t),n.append("projectId",s());try{const a="http://localhost:3000/api/task",s=await fetch(a,{method:"POST",body:n}),l=await s.json();if(c(l.tipo,l.mensaje,document.querySelector(".formulario legend")),"exito"==l.tipo){d();const n={id:String(l.id),name:t,state:"0",projectId:l.projectId};e=[...e,n],o()}}catch(e){console.log(e)}}(a)}})),document.querySelector(".dashboard").appendChild(a)}function s(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e.entries()).id}function c(e,t,n,o=null,a=!1){const s=document.querySelector(".alerta");s&&s.remove();const c=document.createElement("DIV");c.classList.add("alerta",e),c.textContent=t,n.parentElement.insertBefore(c,n.nextElementSibling),null!=o&&o.addEventListener("input",(e=>{const t=document.querySelector(".alerta");""!==e.target.value&&t&&t.remove()})),!0===a&&setTimeout((()=>{c.remove()}),3e3)}function d(){const e=document.querySelector("form"),t=document.querySelector(".modal");document.querySelector(".campo-modal").remove(),setTimeout((()=>{e.classList.add("cerrar")}),750),setTimeout((()=>{t.remove(),document.body.classList.remove("no-overflow")}),1e3)}document.querySelector("#add-task").addEventListener("click",(()=>{a()}))}();